name: 🚀 Deploy
description: Deploys the app to Firebase Hosting
inputs:
  identity-provider:
    description: Identity Provider
    required: true
  service-account-email:
    description: Service Account Email
    required: true
  project-id:
    description: Project ID
    required: true
  preview:
    description: Determines if firebase deploys to a preview channel
    required: false
    default: 'no'
  mode:
    description: The mode to use when building the website. development for local development, dev for firebase dev, and production for firebase prod
    required: false
    default: 'production'

runs:
  using: composite
  steps:
    - name: ⎔ Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: lts/*
        cache: npm

    - name: 📥 Download dependencies
      shell: bash
      run: npm ci

    - name: 👥 Copy ArcGIS assets
      shell: bash
      run: npm run copy:arcgis

    - name: 🏗 Run build script
      shell: bash
      run: npm run build -- --mode ${{ inputs.mode }}

    - name: 🪣 Cache firebase
      uses: actions/cache@v3
      with:
        path: ./.firebase
        key: ${{ runner.OS }}-firebase-${{ hashFiles('**/*.cache') }}
        restore-keys: |
          ${{ runner.OS }}-firebase-
          ${{ runner.OS }}-

    - name: 🗝️ Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v0
      with:
        access_token_scopes: 'email, openid, https://www.googleapis.com/auth/cloud-platform, https://www.googleapis.com/auth/firebase'
        workload_identity_provider: ${{ inputs.identity-provider }}
        service_account: ${{ inputs.service-account-email }}
        create_credentials_file: true

    - name: 🚀 Firebase deploy preview
      id: deploy
      if: inputs.preview == 'yes'
      shell: bash
      run: |
        RESULTS=$(npx firebase-tools hosting:channel:deploy $GITHUB_HEAD_REF \
        --expires 3d \
        --project ${{ inputs.project-id }} \
        --json)
        echo "::set-output name=url::$(echo $RESULTS | jq '.result | .[] | .url')"
        echo "::set-output name=expires::$(echo $RESULTS | jq '.result | .[] | .expireTime')"

    - name: 🚀 Firebase deploy
      shell: bash
      if: inputs.preview != 'yes'
      run: >
        npx firebase-tools deploy
        --only hosting
        --project ${{ inputs.project-id }}

    - name: 🔍 Find preview comment
      id: find-comment
      uses: peter-evans/find-comment@v2
      if: inputs.preview == 'yes'
      with:
        issue-number: ${{ github.event.number }}
        comment-author: 'github-actions[bot]'
        body-includes: Visit the preview URL for this PR

    - name: 🎨 Render template
      id: template
      uses: chuhlomin/render-template@v1
      if: inputs.preview == 'yes'
      with:
        template: .github/actions/deploy/template.md
        vars: |
          commit: ${{ github.sha }}
          url: ${{ steps.deploy.outputs.url }}
          expires: ${{ steps.deploy.outputs.expires }}

    - name: 💬 Post preview comment
      uses: peter-evans/create-or-update-comment@v2
      if: inputs.preview == 'yes'
      with:
        comment-id: ${{ steps.find-comment.outputs.comment-id }}
        issue-number: ${{ github.event.number }}
        body: ${{ steps.template.outputs.result }}
        edit-mode: replace
