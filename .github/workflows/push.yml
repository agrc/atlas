name: Push Events

on:
  push:
    branches:
      - dev
      - main

permissions:
  contents: write
  id-token: write
  deployments: write
  pull-requests: write

concurrency:
  group: '${{ github.ref_name }}'
  cancel-in-progress: true

jobs:
  release-please:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}

    steps:
      - name: ‚¨áÔ∏è Set up code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ‚éî Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: npm

      - name: üì• Download dependencies
        run: npm install -g conventional-changelog-angular conventional-recommended-bump semver

      - name: ‚è© Get next version
        id: get-version
        run: |
          getNextVersion()
          {
            lastTag="$(git describe --tags `git rev-list --tags --max-count=1`)"
            local bump=$(conventional-recommended-bump -p angular)
            if [["${{ github.ref_name }}" == "dev"]];  then
              bump="pre$bump"
            fi
            local newVersion="v$(semver -i $bump $lastTag)"
            echo $newVersion
          }

          echo "::set-output name=version::$(getNextVersion)"

      - name: üöÄ Create release
        uses: google-github-actions/release-please-action@v3
        id: release-please
        with:
          release-type: node
          pull-request-title-pattern: 'chore: release v${version}'
          component: ''
          changelog-types: >
            [{"type":"feat","section":"üöÄ Features","hidden":false},
            {"type":"fix","section":"üêõ Bug Fixes","hidden":false},
            {"type":"chore","section":"üß∞ Maintenance","hidden":true},
            {"type":"deps","section":"üå≤ Dependencies","hidden":false},
            {"type":"docs","section":"üìñ Documentation Improvements","hidden":false}]
          prerelease: ${{ github.ref_name == 'dev' }}
          default-branch: ${{ github.ref_name }}
          release-as: ${{ steps.get-version.outputs.version }}

  deploy-dev:
    name: Deploy to staging
    runs-on: ubuntu-latest
    needs: release-please
    environment:
      name: dev
      url: https://atlas.dev.utah.gov
    if: github.ref_name == 'dev' && needs.release-please.outputs.release_created

    steps:
      - name: ‚¨áÔ∏è Set up code
        uses: actions/checkout@v3

      - name: üöÄ Deploy
        uses: ./.github/actions/deploy
        with:
          identity-provider: ${{ secrets.IDENTITY_PROVIDER }}
          service-account-email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          project-id: ${{ secrets.PROJECT_ID }}
        env:
          VITE_DISCOVER: ${{ secrets.VITE_DISCOVER }}
          VITE_WEB_API: ${{ secrets.VITE_WEB_API }}
          VITE_PRINT_PROXY: ${{ secrets.VITE_PRINT_PROXY }}

  deploy-prod:
    name: Deploy to production
    needs: release-please
    environment:
      name: prod
      url: https://atlas.utah.gov
    if: github.ref_name == 'main' && needs.release-please.outputs.release_created
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Set up code
        uses: actions/checkout@v3

      - name: üöÄ Deploy
        uses: ./.github/actions/deploy
        with:
          identity-provider: ${{ secrets.IDENTITY_PROVIDER }}
          service-account-email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          project-id: ${{ secrets.PROJECT_ID }}
        env:
          VITE_DISCOVER: ${{ secrets.VITE_DISCOVER }}
          VITE_WEB_API: ${{ secrets.VITE_WEB_API }}
          VITE_PRINT_PROXY: ${{ secrets.VITE_PRINT_PROXY }}
