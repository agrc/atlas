name: Node.js CI

on:
  push:
    paths:
      - '.github/workflows/nodejs.yml'
      - 'firebase.json'
      - '.firebaserc'
      - 'src/**'
      - 'public/**'
      - 'package-lock.json'
      - 'cypress/**'
      - 'cypress.json'

permissions:
  contents: read
  id-token: write
  deployments: write

concurrency:
  group: '${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  test-functional:
    name: Functional tests
    runs-on: ubuntu-latest
    environment:
      name: dev
    env:
      VITE_DISCOVER: ${{ secrets.VITE_DISCOVER }}
      VITE_PRINT_PROXY: ${{ secrets.VITE_PRINT_PROXY }}
      VITE_WEB_API: ${{ secrets.VITE_WEB_API }}
    steps:
      - name: ⬇️ Set up code
        uses: actions/checkout@v3

      - name: 🧪 Run tests
        uses: cypress-io/github-action@v3
        with:
          start: npm run start
          wait-on: 'http://127.0.0.1:5173'

  test-unit:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Set up code
        uses: actions/checkout@v3

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: npm

      - name: 📥 Download dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm test

  deploy-dev:
    name: Deploy to staging
    runs-on: ubuntu-latest
    needs: [test-unit, test-functional]
    environment:
      name: dev
      url: https://atlas.dev.utah.gov
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: ⬇️ Set up code
        uses: actions/checkout@v3

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: npm

      - name: 📥 Download dependencies
        run: npm ci

      - name: 👥 Copy arcgis assets
        run: npm run copy:arcgis

      - name: 🏗 Run build script
        run: npm run build
        env:
          VITE_DISCOVER: ${{ secrets.VITE_DISCOVER }}
          VITE_WEB_API: ${{ secrets.VITE_WEB_API }}
          VITE_PRINT_PROXY: ${{ secrets.VITE_PRINT_PROXY }}

      - name: 🪣 Cache firebase
        uses: actions/cache@v3
        with:
          path: ./.firebase
          key: ${{ runner.OS }}-firebase-${{ hashFiles('**/*.cache') }}
          restore-keys: |
            ${{ runner.OS }}-firebase-
            ${{ runner.OS }}-

      - name: 🗝️ Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v0
        with:
          access_token_scopes: 'email, openid, https://www.googleapis.com/auth/cloud-platform, https://www.googleapis.com/auth/firebase'
          workload_identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          create_credentials_file: true

      - name: 🚀 Firebase Deploy
        run: >
          npx firebase-tools deploy
          --only hosting
          --project ${{ secrets.PROJECT_ID }}
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels

  deploy-prod:
    name: Deploy to production
    needs: [test-unit, test-functional]
    environment:
      name: prod
      url: https://atlas.utah.gov
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Set up code
        uses: actions/checkout@v3

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: npm

      - name: 📥 Download dependencies
        run: npm ci

      - name: 👥 Copy arcgis assets
        run: npm run copy:arcgis

      - name: 🏗 Run build script
        run: npm run build
        env:
          VITE_DISCOVER: ${{ secrets.VITE_DISCOVER }}
          VITE_WEB_API: ${{ secrets.VITE_WEB_API }}
          VITE_PRINT_PROXY: ${{ secrets.VITE_PRINT_PROXY }}

      - name: 🪣 Cache firebase
        uses: actions/cache@v3
        with:
          path: ./.firebase
          key: ${{ runner.OS }}-firebase-${{ hashFiles('**/*.cache') }}
          restore-keys: |
            ${{ runner.OS }}-firebase-
            ${{ runner.OS }}-

      - name: 🗝️ Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v0
        with:
          access_token_scopes: 'email, openid, https://www.googleapis.com/auth/cloud-platform, https://www.googleapis.com/auth/firebase'
          workload_identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          create_credentials_file: true

      - name: 🚀 Firebase Deploy
        run: >
          npx firebase-tools deploy
          --only hosting
          --project ${{ secrets.PROJECT_ID }}
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels
