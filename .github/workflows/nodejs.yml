name: Node.js CI

on: pull_request

permissions:
  contents: write
  id-token: write
  deployments: write
  pull-requests: write

concurrency:
  group: '${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  test-functional:
    name: Functional tests
    runs-on: ubuntu-latest
    environment:
      name: dev
    env:
      VITE_DISCOVER: ${{ secrets.VITE_DISCOVER }}
      VITE_PRINT_PROXY: ${{ secrets.VITE_PRINT_PROXY }}
      VITE_WEB_API: ${{ secrets.VITE_WEB_API }}
    steps:
      - name: ⬇️ Set up code
        uses: actions/checkout@v3

      - name: 🧪 Run tests
        uses: cypress-io/github-action@v3
        with:
          start: npm run start
          wait-on: 'http://127.0.0.1:5173'

  test-unit:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Set up code
        uses: actions/checkout@v3

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: npm

      - name: 📥 Download dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm test

  release-please:
    name: Create release
    runs-on: ubuntu-latest
    needs: [test-unit, test-functional]
    env:
      prerelease: ${{ github.base_ref == 'dev' }}
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}

    steps:
      - name: ⬇️ Set up code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: npm

      - name: 📥 Download dependencies
        run: npm install -g conventional-changelog-angular conventional-recommended-bump semver

      - name: ⏩ Get next version
        id: get-version
        run: |
          getNextVersion()
          {
            lastTag="$(git describe --tags `git rev-list --tags --max-count=1`)"
            local bump=$(conventional-recommended-bump -p angular)
            if ${{ env.prerelease }}; then
              bump="pre$bump"
            fi
            local newVersion="v$(semver -i $bump $lastTag)"
            echo $newVersion
          }

          echo "::set-output name=version::$(getNextVersion)"

      - name: 🚀 Create release
        uses: google-github-actions/release-please-action@v3
        id: release-please
        with:
          release-type: node
          pull-request-title-pattern: 'chore: release v${version}'
          component: ''
          changelog-types: >
            [{"type":"feat","section":"🚀 Features","hidden":false},
            {"type":"fix","section":"🐛 Bug Fixes","hidden":false},
            {"type":"chore","section":"🧰 Maintenance","hidden":true},
            {"type":"deps","section":"🌲 Dependencies","hidden":false},
            {"type":"docs","section":"📖 Documentation Improvements","hidden":false}]
          prerelease: ${{ env.prerelease }}
          default-branch: ${{ github.base_ref || github.ref_name }}
          release-as: ${{ steps.get-version.outputs.version }}

  deploy-preview:
    name: Firebase preview
    runs-on: ubuntu-latest
    needs: [test-unit, test-functional]
    environment:
      name: dev

    steps:
      - name: ⬇️ Set up code
        uses: actions/checkout@v3

      - name: 🚀 Deploy
        uses: ./.github/actions/deploy
        with:
          identity-provider: ${{ secrets.IDENTITY_PROVIDER }}
          service-account-email: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          project-id: ${{ secrets.PROJECT_ID }}
        env:
          VITE_DISCOVER: ${{ secrets.VITE_DISCOVER }}
          VITE_WEB_API: ${{ secrets.VITE_WEB_API }}
          VITE_PRINT_PROXY: ${{ secrets.VITE_PRINT_PROXY }}

  deploy-dev:
    name: Deploy to staging
    runs-on: ubuntu-latest
    needs: [test-unit, test-functional, release-please]
    environment:
      name: dev
      url: https://atlas.dev.utah.gov
    if: github.ref == 'refs/heads/dev' && needs.release-please.outputs.release_created

    steps:
      - name: ⬇️ Set up code
        uses: actions/checkout@v3

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: npm

      - name: 📥 Download dependencies
        run: npm ci

      - name: 👥 Copy arcgis assets
        run: npm run copy:arcgis

      - name: 🏗 Run build script
        run: npm run build
        env:
          VITE_DISCOVER: ${{ secrets.VITE_DISCOVER }}
          VITE_WEB_API: ${{ secrets.VITE_WEB_API }}
          VITE_PRINT_PROXY: ${{ secrets.VITE_PRINT_PROXY }}

      - name: 🪣 Cache firebase
        uses: actions/cache@v3
        with:
          path: ./.firebase
          key: ${{ runner.OS }}-firebase-${{ hashFiles('**/*.cache') }}
          restore-keys: |
            ${{ runner.OS }}-firebase-
            ${{ runner.OS }}-

      - name: 🗝️ Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v0
        with:
          access_token_scopes: 'email, openid, https://www.googleapis.com/auth/cloud-platform, https://www.googleapis.com/auth/firebase'
          workload_identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          create_credentials_file: true

      - name: 🚀 Firebase deploy
        run: >
          npx firebase-tools deploy
          --only hosting
          --project ${{ secrets.PROJECT_ID }}

  deploy-prod:
    name: deploy to production
    needs: [test-unit, test-functional, release-please]
    environment:
      name: prod
      url: https://atlas.utah.gov
    if: github.ref == 'refs/heads/main' && needs.release-please.outputs.release_created
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Set up code
        uses: actions/checkout@v3

      - name: ⎔ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: npm

      - name: 📥 Download dependencies
        run: npm ci

      - name: 👥 Copy ArcGIS assets
        run: npm run copy:arcgis

      - name: 🏗 Run build script
        run: npm run build
        env:
          VITE_DISCOVER: ${{ secrets.VITE_DISCOVER }}
          VITE_WEB_API: ${{ secrets.VITE_WEB_API }}
          VITE_PRINT_PROXY: ${{ secrets.VITE_PRINT_PROXY }}

      - name: 🪣 Cache firebase
        uses: actions/cache@v3
        with:
          path: ./.firebase
          key: ${{ runner.OS }}-firebase-${{ hashFiles('**/*.cache') }}
          restore-keys: |
            ${{ runner.OS }}-firebase-
            ${{ runner.OS }}-

      - name: 🗝️ Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v0
        with:
          access_token_scopes: 'email, openid, https://www.googleapis.com/auth/cloud-platform, https://www.googleapis.com/auth/firebase'
          workload_identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
          create_credentials_file: true

      - name: 🚀 Firebase deploy
        run: >
          npx firebase-tools deploy
          --only hosting
          --project ${{ secrets.PROJECT_ID }}
